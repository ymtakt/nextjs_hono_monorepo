/**
 * Prisma Clientジェネレーター設定
 * @description アプリケーションに型安全なデータベースアクセスと
 * クエリビルド機能を提供するPrisma Clientを生成します。
 * 生成されたクライアントは"../generated/client"ディレクトリに出力されます。
 */
generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/client" 修正パターン1, ドキュメントの書き方
  // 修正パターン2, 視認性が良い・・・こっち採用する
  output   = "../generated/client"
}

/**
 * Fabbricaジェネレーター設定
 * @description テストデータ作成用のファクトリ関数を@quramy/prisma-fabbricaを使用して生成します。
 * これらのファクトリは、適切な型と関係性を持つテストデータのセットアップを支援します。
 * 生成されたファクトリは"../generated/fabbrica"ディレクトリに出力されます。
 */
generator fabbrica {
  provider = "@quramy/prisma-fabbrica"
  output   = "../generated/fabbrica"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  todos     Todo[]

  @@map("users")
}

model Todo {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean  @default(false)
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("todos")
}
